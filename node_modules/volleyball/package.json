{
  "_args": [
    [
      {
        "raw": "volleyball",
        "scope": null,
        "escapedName": "volleyball",
        "name": "volleyball",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/jen/Documents/Fullstack Academy/Jen-lib/checkpoints/checkpoint-express-sequelize-review/wikistackReview"
    ]
  ],
  "_from": "volleyball@latest",
  "_id": "volleyball@1.4.1",
  "_inCache": true,
  "_location": "/volleyball",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/volleyball-1.4.1.tgz_1476463428302_0.9616564174648374"
  },
  "_npmUser": {
    "name": "glebec",
    "email": "glebec@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "volleyball",
    "scope": null,
    "escapedName": "volleyball",
    "name": "volleyball",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/volleyball/-/volleyball-1.4.1.tgz",
  "_shasum": "3f9c2113638a79aa7e3b6536e9049ce901993d10",
  "_shrinkwrap": null,
  "_spec": "volleyball",
  "_where": "/home/jen/Documents/Fullstack Academy/Jen-lib/checkpoints/checkpoint-express-sequelize-review/wikistackReview",
  "author": {
    "name": "Gabriel Lebec",
    "email": "glebec@gmail.com",
    "url": "https://github.com/glebec"
  },
  "bugs": {
    "url": "https://github.com/glebec/volleyball/issues"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "debug": "^2.2.0",
    "filesize": "^3.3.0"
  },
  "description": "üèê Tiny HTTP logger for Express showing asynchronous requests and responses",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-preset-es2015": "^6.13.2",
    "chai": "^3.5.0",
    "eslint": "^3.3.0",
    "eslint-config-fullstack": "^1.4.1",
    "express": "^4.14.0",
    "mocha": "^3.0.2",
    "supertest": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3f9c2113638a79aa7e3b6536e9049ce901993d10",
    "tarball": "https://registry.npmjs.org/volleyball/-/volleyball-1.4.1.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "4d96a2b7610f8789cafbb2287f8c76d803dbf067",
  "homepage": "https://github.com/glebec/volleyball",
  "keywords": [
    "HTTP",
    "logging",
    "logger",
    "log",
    "middleware",
    "async",
    "req",
    "res"
  ],
  "license": "MIT",
  "main": "lib/volleyball.js",
  "maintainers": [
    {
      "name": "glebec",
      "email": "glebec@gmail.com"
    }
  ],
  "name": "volleyball",
  "optionalDependencies": {},
  "readme": "[![npm version](https://img.shields.io/npm/v/volleyball.svg?maxAge=3600)](https://www.npmjs.com/package/volleyball)\n[![Codeship](https://img.shields.io/codeship/6f38c760-44b0-0134-bda6-02154be91b77.svg)](https://codeship.com/projects/168493)\n[![Greenkeeper.io is keeping this repo's dependencies up to date](https://img.shields.io/badge/greenkeeper.io-monitoring-brightgreen.svg?maxAge=3600)](https://greenkeeper.io/)\n\n# üèê Volleyball\n\n### Small Express HTTP logger for debugging asynchronous requests and responses\n\n```js\nconst app = require('express')()\nconst volleyball = require('volleyball')\n\napp.use(volleyball)\n```\n\n![Screenshot](https://cloud.githubusercontent.com/assets/7230206/17677905/ce1c59f0-6302-11e6-9bdb-b43c4d831152.jpg)\n\nVolleyball is a minimal Connect-style middleware function which logs incoming requests and outgoing responses as separate events. It optionally supports the [`debug`](https://github.com/visionmedia/debug#readme) module.\n\n## Motivation\n\nLogging HTTP cycles can be approached in several ways, each with its own drawbacks:\n\n* Log only upon **request**. Drawback: we cannot log the corresponding response, which happens later (if at all).\n* Log only upon **response**, attaching the request. Drawback A: if the server never sends a response, e.g. due to a bug, the request will not be logged either. Drawback B: two temporally distinct events are conflated, misleadingly.\n* Log both upon **request** and **response**. Drawback: it is not necessarily clear which responses are for which requests.\n\nVolleyball takes the last approach, and assigns randomly-generated ids to label request-response pairs. It is designed for student project development, teaching beginning programmers how HTTP servers and asynchronicity work. It may also be useful as a low-configuration debug tool.\n\n## Usage\n\n### `volleyball`\n\nThe `volleyball` module can be used directly as demonstrated in the first example. The module defaults to using `process.stdout` for output.\n\n### `volleyball.custom(config)`\n\nA customized logging middleware can be generated by calling `custom` with a configuration object:\n\n```js\nconst logger = volleyball.custom({ debug: true }) // default namespace 'http'\n// const logger = volleyball.custom({ debug: 'custom-namespace' })\n// const logger = volleyball.custom({ debug: debugInstance })\n\napp.use(logger)\n```\n\nThe `debug` property logs using the [`debug`](https://github.com/visionmedia/debug#readme) module. It supports the following values:\n\nvalue | result\n----|----\n`true` | uses a new debug instance with a default namespace of `'http'`\nstring | uses a new debug instance with a custom namespace\nfunction | uses any function, such as a pre-generated debug instance. Note that the function will be called with colorized strings.\n\n## Related and Alternatives\n\nFor more powerful, configurable, and compatible logging needs, check out:\n\n* [debug](https://github.com/visionmedia/debug#readme)\n* [morgan](https://github.com/expressjs/morgan#readme)\n* [morgan-debug](https://github.com/ChiperSoft/morgan-debug#readme)\n* [winston](https://github.com/winstonjs/winston#readme)\n* [express-winston](https://github.com/bithavoc/express-winston#readme)\n* [node-bunyan](https://github.com/trentm/node-bunyan/#readme)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/glebec/volleyball.git"
  },
  "scripts": {
    "build": "babel src -d lib",
    "lint": "eslint **/*.js --ignore-pattern node_modules",
    "test": "DEBUG=http,custom mocha"
  },
  "version": "1.4.1"
}
